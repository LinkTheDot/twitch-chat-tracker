//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.4

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "twitch_user")]
pub struct Model {
  #[sea_orm(primary_key)]
  pub id: i32,
  #[sea_orm(unique)]
  pub twitch_id: i32,
  pub display_name: String,
  pub login_name: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
  #[sea_orm(has_many = "super::stream::Entity")]
  Stream,
}

impl Related<super::stream::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::Stream.def()
  }
}

impl ActiveModelBehavior for ActiveModel {}
